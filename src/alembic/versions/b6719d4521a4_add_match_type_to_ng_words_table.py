"""add match_type to ng_words table

Revision ID: b6719d4521a4
Revises: 9d63c31ae6c5
Create Date: 2025-08-31 17:31:12.162140

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b6719d4521a4'
down_revision: Union[str, Sequence[str], None] = '9d63c31ae6c5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_admin_logs_guild_time'), table_name='admin_command_logs')
    op.create_index('idx_admin_logs_guild_time', 'admin_command_logs', ['guild_id', 'created_at'], unique=False, postgresql_using='btree', postgresql_ops={'created_at': 'DESC'})
    op.drop_index(op.f('idx_bulk_delete_guild_time'), table_name='bulk_delete_history')
    op.create_index('idx_bulk_delete_guild_time', 'bulk_delete_history', ['guild_id', 'execution_time'], unique=False, postgresql_using='btree', postgresql_ops={'execution_time': 'DESC'})
    op.add_column('ng_words', sa.Column('match_type', sa.String(length=20), server_default='partial', nullable=False))
    op.drop_constraint(op.f('uq_ng_word_guild_word'), 'ng_words', type_='unique')
    op.create_unique_constraint('uq_ng_word_guild_word_type', 'ng_words', ['guild_id', 'word', 'match_type'])
    op.drop_index(op.f('idx_user_logs_guild_time'), table_name='user_command_logs')
    op.create_index('idx_user_logs_guild_time', 'user_command_logs', ['guild_id', 'created_at'], unique=False, postgresql_using='btree', postgresql_ops={'created_at': 'DESC'})
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_user_logs_guild_time', table_name='user_command_logs', postgresql_using='btree', postgresql_ops={'created_at': 'DESC'})
    op.create_index(op.f('idx_user_logs_guild_time'), 'user_command_logs', ['guild_id', sa.literal_column('created_at DESC')], unique=False)
    op.drop_constraint('uq_ng_word_guild_word_type', 'ng_words', type_='unique')
    op.create_unique_constraint(op.f('uq_ng_word_guild_word'), 'ng_words', ['guild_id', 'word'], postgresql_nulls_not_distinct=False)
    op.drop_column('ng_words', 'match_type')
    op.drop_index('idx_bulk_delete_guild_time', table_name='bulk_delete_history', postgresql_using='btree', postgresql_ops={'execution_time': 'DESC'})
    op.create_index(op.f('idx_bulk_delete_guild_time'), 'bulk_delete_history', ['guild_id', sa.literal_column('execution_time DESC')], unique=False)
    op.drop_index('idx_admin_logs_guild_time', table_name='admin_command_logs', postgresql_using='btree', postgresql_ops={'created_at': 'DESC'})
    op.create_index(op.f('idx_admin_logs_guild_time'), 'admin_command_logs', ['guild_id', sa.literal_column('created_at DESC')], unique=False)
    # ### end Alembic commands ###
